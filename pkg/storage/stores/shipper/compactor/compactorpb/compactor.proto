syntax = "proto3";

package compactorpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "pkg/logproto/logproto.proto";

option go_package = "github.com/grafana/loki/pkg/storage/stores/shipper/compactor/compactorpb";

service Compactor {
  rpc GetObjectKeys(GetObjectKeysRequest) returns (GetObjectKeysResponse) {}
}

message GetObjectKeysRequest {
  int64 from = 1 [
    (gogoproto.customtype) = "github.com/prometheus/common/model.Time",
    (gogoproto.nullable) = false
  ];
  int64 through = 2 [
    (gogoproto.customtype) = "github.com/prometheus/common/model.Time",
    (gogoproto.nullable) = false
  ];
}

message GetObjectKeysResponse {
  repeated string keys = 1;
}
